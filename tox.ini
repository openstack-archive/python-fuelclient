[tox]
minversion = 2.1
skipsdist = True
envlist = py27,pep8,functional,cleanup

[testenv]
usedevelop = True
install_command = pip install --allow-external -U {opts} {packages}
whitelist_externals = bash
                      oslo_debug_helper
                      python
setenv = VIRTUAL_ENV={envdir}
         ARTIFACTS={toxinidir}/{env:ARTIFACTS:test_run}
         FUELCLIENT_JUNIT={env:FUELCLIENT_JUNIT:fuelclient}-{envname}.xml
         FUELCLIENT_CUSTOM_SETTINGS={env:ARTIFACTS:test_run}/fuel_client_config.yaml

         # Functional env settings
         FUEL_WEB_CLONE={env:FUEL_WEB_CLONE:yes}
         FUEL_WEB_REPO={env:FUEL_WEB_REPO:https://github.com/stackforge/fuel-web.git}
         FUEL_WEB_ROOT={env:FUEL_WEB_ROOT:/tmp/fuel_web}
         FETCH_REPO={env:FETCH_REPO:}
         FETCH_REFSPEC={env:FETCH_REFSPEC:}
         FUEL_COMMIT={env:FUEL_COMMIT:master}
         NAILGUN_ROOT={env:FUEL_WEB_ROOT:/tmp/fuel_web}/nailgun

         # Nailgun server parameters
         NAILGUN_PORT={env:NAILGUN_PORT:8003}
         NAILGUN_CHECK_PATH={env:NAILGUN_CHECK_PATH:/api/version}
         NAILGUN_START_MAX_WAIT_TIME={env:NAILGUN_START_MAX_WAIT_TIME:20}
         TEST_NAILGUN_DB={env:TEST_NAILGUN_DB:nailgun}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt

commands = python setup.py test --slowest --testr-args "{posargs}"

[testenv:functional]
setenv = {[testenv]setenv}
         OS_TEST_PATH={toxinidir}/fuelclient/tests/functional
commands =
    bash {toxinidir}/tools/cleanup.sh
    bash {toxinidir}/tools/prepare_nailgun.sh
    python setup.py test --slowest --testr-args "{posargs}"

[testenv:dbgunit]
commands = oslo_debug_helper -t {toxinidir}/fuelclient/tests/unit {posargs}

[testenv:dbgfunc]
commands =
    bash {toxinidir}/tools/cleanup.sh
    bash {toxinidir}/tools/prepare_nailgun.sh
    oslo_debug_helper -t {toxinidir}/fuelclient/tests/functional {posargs}

[testenv:cleanup]
commands =
    bash {toxinidir}/tools/cleanup.sh
    bash -c "find {toxinidir} -name \"*.pyc\" -delete"

[testenv:pep8]
deps = hacking==0.10
usedevelop = False
commands =
    flake8 {posargs:fuelclient}

[testenv:cover]
commands =
    python setup.py testr --coverage --testr-args '{posargs}'

[testenv:venv]
commands = {posargs:}

[testenv:devenv]
envdir = devenv
usedevelop = True

[flake8]
# TODO(atykhonov): H405 must be removed when old CLI is removed
ignore = H405
exclude = .venv,.git,.tox,dist,doc,*lib/python*,*egg,build,tools,__init__.py,docs
show-pep8 = True
show-source = True
count = True

[hacking]
import_exceptions = testtools.matchers
